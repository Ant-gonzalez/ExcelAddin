{"version":3,"sources":["renderDialog.tsx"],"sourcesContent":["/** @jsxRuntime automatic */\n/** @jsxImportSource @fluentui/react-jsx-runtime */\n\nimport * as React from 'react';\n\nimport { DialogProvider, DialogSurfaceProvider } from '../../contexts';\nimport { DialogSurfaceMotion } from '../DialogSurfaceMotion';\nimport type { DialogState, DialogContextValues } from './Dialog.types';\n\n/**\n * Render the final JSX of Dialog\n */\nexport const renderDialog_unstable = (state: DialogState, contextValues: DialogContextValues) => {\n  const { content, open, trigger } = state;\n\n  return (\n    <DialogProvider value={contextValues.dialog}>\n      <DialogSurfaceProvider value={contextValues.dialogSurface}>\n        {trigger}\n        {content && (\n          <DialogSurfaceMotion appear visible={open} unmountOnExit>\n            {/* Casting here as content should be equivalent to <DialogSurface/> */}\n            {/* FIXME: content should not be ReactNode it should be ReactElement instead. */}\n            {content as React.ReactElement}\n          </DialogSurfaceMotion>\n        )}\n      </DialogSurfaceProvider>\n    </DialogProvider>\n  );\n};\n"],"names":["renderDialog_unstable","state","contextValues","content","open","trigger","_jsx","DialogProvider","value","dialog","_jsxs","DialogSurfaceProvider","dialogSurface","DialogSurfaceMotion","appear","visible","unmountOnExit"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAYaA;;;eAAAA;;;;4BAXb;iEAEuB;0BAE+B;qCAClB;AAM7B,MAAMA,wBAAwB,CAACC,OAAoBC;IACxD,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE,GAAGJ;IAEnC,OAAA,WAAA,GACEK,IAAAA,eAAA,EAACC,wBAAAA,EAAAA;QAAeC,OAAON,cAAcO,MAAM;kBACzC,WAAA,GAAAC,IAAAA,gBAAA,EAACC,+BAAAA,EAAAA;YAAsBH,OAAON,cAAcU,aAAa;;gBACtDP;gBACAF,WAAAA,WAAAA,GACCG,IAAAA,eAAA,EAACO,wCAAAA,EAAAA;oBAAoBC,QAAM;oBAACC,SAASX;oBAAMY,eAAa;8BAGrDb;;;;;AAMb"}